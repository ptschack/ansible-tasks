- name: get franz link
  shell: |
    curl -s $( \
      curl -si https://github.com/meetfranz/franz/releases/latest \
      | grep Location \
      | awk '{print $2}' \
      | tr -dc '[[:print:]]' \
    ) \
    | grep download \
    | grep 'href=".*\.tar\.gz' \
    | sed 's|^.*href="||' \
    | sed 's|".*$||'
  register: franz_link
  delegate_to: localhost

- name: get franz archive name
  shell: "echo {{ franz_link.stdout }} | sed 's|.*/||'"
  register: franz_filename

- name: "stat {{ franz_filename.stdout }}"
  stat:
    path: "/tmp/{{ franz_filename.stdout }}"
  register: franz_archive_file
  delegate_to: localhost

- name: stat /opt/franz/ANSIBLE_MANAGED_VERSION.txt
  stat:
    path: /opt/franz/ANSIBLE_MANAGED_VERSION.txt
  register: franz_version_file

- name: get installed version
  shell: cat /opt/franz/ANSIBLE_MANAGED_VERSION.txt
  register: franz_installed_version
  when: franz_version_file.stat.exists

- name: "download & install franz"
  block:
  - name: download "https://github.com{{ franz_link.stdout }}"
    become: yes
    get_url:
      url: "https://github.com{{ franz_link.stdout }}"
      dest: /tmp/
    delegate_to: localhost
    when: franz_archive_file.stat.exists != true

  - name: rm -rf /opt/franz.old
    become: yes
    file:
      path: /opt/franz.old
      state: absent

  - name: stat /opt/franz
    stat:
      path: /opt/franz
    register: franz_old

  - name: mv /opt/franz /opt/franz.old
    become: yes
    command: mv /opt/franz /opt/franz.old
    when: franz_old.stat.exists

  - name: "extract /tmp/{{ franz_filename.stdout }} into /opt/"
    become: yes
    unarchive:
      src: "/tmp/{{ franz_filename.stdout }}"
      dest: /opt/

  - name: get franz dir name
    shell: find /opt/ -type d -name "*franz*" | grep -v 'franz\.old' | tail -n 1
    register: franz_extract

  - fail:
      msg: "Could not find extraction dir {{ franz_extract.stdout }}"
    when: franz_extract.stdout == ""

  - name: "mv {{ franz_extract.stdout }} /opt/franz"
    become: yes
    command: "mv {{ franz_extract.stdout }} /opt/franz"

  - name: save version
    become: yes
    shell: "echo {{ franz_filename }} > /opt/franz/ANSIBLE_MANAGED_VERSION.txt"

  - name: link franz
    become: yes
    file:
      src: /opt/franz/franz
      dest: /usr/local/bin/franz
      state: link

  - name: rm "/tmp/{{ franz_filename.stdout }}"
    become: yes
    file:
      path: "/tmp/{{ franz_filename.stdout }}"
      state: absent
    delegate_to: localhost

  when: franz_installed_version.stdout is not defined
        or franz_installed_version.stdout != franz_filename.stdout